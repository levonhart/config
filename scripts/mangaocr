#!/bin/bash

set -euo pipefail

readonly TESSDATA_PREFIX=$HOME/.local/share/tesseract-data
declare eng_mode=false

notify() {
	echo "$*"
	notify-send "Manga OCR" "$*" &
}

if_installed() {
	for x in "$@"; do
		if ! which "$x" >/dev/null 2>&1 && ! pacman -Qq "$x" >/dev/null 2>&1; then
			notify "$x must be installed for this function."
			return 1
		fi
	done
}

# download_tessdata() {
# 	local -r \
# 		zip_url='https://matrix.4d2.org/_matrix/media/v3/download/4d2.org/akBtGDReZvxAbHZvKtHKfbyi' \
# 		zip_path=$(mktemp /tmp/tesseract_data.XXXXXX) \
# 		osd_path=/usr/share/tessdata/osd.traineddata
#
# 	curl "$zip_url" --output "$zip_path"
# 	mkdir -p -- "$TESSDATA_PREFIX"
# 	unzip -o -j "$zip_path" -d "$TESSDATA_PREFIX"
# 	rm -- "$zip_path"
# 	if [[ -f $osd_path ]] && ! [[ -f $TESSDATA_PREFIX/${osd_path##*/} ]]; then
# 		cp -- "$osd_path" "$TESSDATA_PREFIX"
# 	fi
# }

installed_languages() {
	find "$TESSDATA_PREFIX" -type f -name '*.traineddata' -printf '%f+' | sed 's|\.traineddata||g; s|\+$||'
}

take_screenshot() {
	# https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html#missing-borders
	# maim --select --hidecursor --format=png --quality 1 |
	local -r result=$(mktemp "${TMPDIR:-/tmp/}$(basename $0)-XXXXXXXX.png")
	gnome-screenshot -a -f ${result} || magick \
		png:${result} \
		-modulate 100,0 \
		-resize 400% \
		-alpha off \
		-bordercolor White \
		-border 10x10 \
		png:${result}
	test -s $result && echo "${result}"
}

tesseract_recognize() {
	# https://tesseract-ocr.github.io/tessdoc/Command-Line-Usage.html
	local lang=$(installed_languages)
	result=$(
		tesseract "$1" stdout \
		--tessdata-dir "$TESSDATA_PREFIX" \
		-l "$lang" \
		--psm 1
	)
	if ! $eng_mode; then
		result=$(
			echo "$result" |
			tr -d ' ' |
			tr -d '\n' |
			grep -P '[ｦ-ﾟァ-ヶぁ-ゞＡ-ｚ０-９ｧ-ﾝﾞﾟァ-ンぁ-ん一-龯]+'
		)
	fi
	echo "$result"
}

run_ocr() {
	local screenshot="$(take_screenshot)"
	if [[ -n $screenshot ]]; then
		# echo "running:  tesseract $screenshot stdout --tessdata-dir "$TESSDATA_PREFIX"  -l "$(installed_languages)"  --psm 1"
		local -r result=$(tesseract_recognize "$screenshot")
		if [[ -n $result ]]; then
			xclip -selection clipboard <<<"$result"
			notify "Copied $result."
		else
			notify "Failed."
			return 1
		fi
	fi
}

main() {
	if_installed curl unzip gnome-screenshot magick tesseract xclip || exit 1

	while (($# > 0)); do
		case $1 in
			--eng)
				eng_mode=true
				;;
			*)
				;;
		esac
		shift
	done
	readonly eng_mode

	if [[ -d $TESSDATA_PREFIX ]]; then
		run_ocr
	else
		notify "Couldn't find Tesseract data files. Please, download tesseract-data and install at $TESSDATA_PREFIX"
		# download_tessdata
		# notify "Downloaded Tesseract data. Run this script again to recognize Japanese text."
	fi
}

main "$@"
