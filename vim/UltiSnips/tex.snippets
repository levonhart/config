# vim:ft=snippets:
## Geral
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'

endglobal

snippet pac "usepackage - removes square braces if options removed" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

## Env

snippet beg "begin{} / end{}" bi
\begin{$1}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet eq "Equation" bw
\begin{equation}
	$0
\end{equation}
endsnippet

snippet al "Align amsmath" bw
\begin{align}
	${1} &${2:=} \\\\
	$0 &${2/[^&]+/ /g}
\end{align}
endsnippet

snippet all "Align amsmath -- not numbered" bw
\begin{align*}
	${1} &${2:=} \\\\
	$0 &${2/[^&]+/ /g}
\end{align*}
endsnippet

context "math()"
snippet case "cases" bw
\begin{cases}
	${0:${VISUAL}}
\end{cases}
endsnippet

snippet fig "Figure environment" bw
\begin{figure}[${1:htpb}]
	\centering%
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}%
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet sfig "Subfigure environment" bw
\begin{subfigure}[${1:htpb}]{${2:0.45\textwidth}}
	\ragged${3:r}${3/(l)$|(r)$|(.+)/(?1:eft)(?2:ight)/}
	${4:\includegraphics[$6]{$5}}
\end{subfigure}
endsnippet

snippet tz "Tikz figure environment" bw
\begin{tikzpicture}[scale=1.0, line width = 1pt, ->, >=stealth]
	$0
\end{tikzpicture}
endsnippet

snippet enum "Enumerate" bw
\begin{enumerate}
	\item ${0:${VISUAL}}
\end{enumerate}
endsnippet

snippet item "Itemize" bw
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet lem "Lemma" bw
\begin{lemma}%
\label{lem:$2}
	${0:${VISUAL}}
\end{lemma}
endsnippet

snippet prop "Proposition" bw
\begin{prop}[$1]%
\label{prop:$2}
	${0:${VISUAL}}
\end{prop}
endsnippet

snippet thm "Theorem" bw
\begin{theorem}[$1]%
\label{thm:$2}
	${0:${VISUAL}}
\end{theorem}
endsnippet

snippet pro "Proof" bw
\begin{proof}`!p snip.rv='[' if t[1] else ""`${1:Proof}`!p snip.rv = ']' if t[1] else ""`
	${0:${VISUAL}}
\end{proof}
endsnippet

snippet def "Definition" bw
\begin{definition}[$1]
	${0:${VISUAL}}
\end{definition}
endsnippet

snippet cor "Corollary" bw
\begin{corollary}`!p snip.rv='[' if t[1] else ""`${1:Corollary}`!p snip.rv = ']' if t[1] else ""`
	${0:${VISUAL}}
\end{corollary}
endsnippet


## Text

context "env('itemize')|env('enumerate')"
snippet it "Item" wbA
\item ${0:${VISUAL}}
endsnippet

snippet '(?<=[a-zA-z]|\?|\!|\s)\.\.\.' "Ellipsis" irA
\ldots
endsnippet

snippet it "Italic" wi
\textit{${1:${VISUAL}}}$0
endsnippet

snippet bf "Bold" wi
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet under "Underline" wi
\underline{${1:${VISUAL}}}$0
endsnippet

snippet over "Overline" wi
\overline{${1:${VISUAL}}}$0
endsnippet

snippet em "Emphasize" wi
\emph{${1:${VISUAL}}}$0
endsnippet

snippet sc "Small caps" wi
\textsc{${1:${VISUAL}}}$0
endsnippet

snippet '[\s~]*ref' "Reference" wir
~\ref{$1}
endsnippet

## Math

snippet $ "Inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet [ "Math" wAb
\[
${1:${VISUAL}}
.\]
$0
endsnippet

context "math()"
snippet '((\d+)|\|?(\d*)(\\)?([A-Za-z]+)((\^|_)(\{[\dA-Za-z]+\}|[\dA-Za-z]))*\|?)/' "Fraction auto" wrA
\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
snippet // "Fraction start" iA
\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = length = len(stripped) - 1
while i > -1:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
if i == -1: i = length
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '_([\da-z]{2,})' "auto subscript" irA
_{`!p snip.rv = match.group(1)`${1}}$0
endsnippet

context "math()"
snippet '\^([\da-z]{2,})' "auto superscript" irA
^{`!p snip.rv = match.group(1)`${1}}$0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "math()"
snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

priority 100
context "math()"
snippet * "Multiplication" i
\times 
endsnippet

context "math()"
snippet . "Dot" i
\cdot 
endsnippet

context "math()"
snippet .. "ldots" iA
\ldots 
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "env('align')|env('align*')"
snippet == "equals" iA
&= $1 ${0:\\\\%}
endsnippet

context "math()"
snippet != "not equals" iA
\neq 
endsnippet

context "math()"
snippet iff "iff" iA
\iff
endsnippet

context "math()"
snippet sse "Se, e somente se (math)," iA
\iff
endsnippet

context "math()"
snippet -> "to" iA
\to 
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet => "implies" iA
\implies
endsnippet

context "math()"
snippet =< "implied by" iA
\impliedby
endsnippet

snippet <= "leq" iA
\leq 
endsnippet

snippet >= "geq" iA
\geq 
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet lz "elizinho" iA
\ell
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet ss "subset" Ai
\subset 
endsnippet

context "math()"
snippet nin "not in" wA
\notin 
endsnippet

context "math()"
snippet \nin "not in2" w
\notin 
endsnippet

context "math()"
snippet in "in" wA
\in 
endsnippet

context "math()"
snippet II "Intersection cap" iA
\cap 
endsnippet

context "math()"
snippet UU "Union cup" iA
\cup 
endsnippet

context "math()"
snippet OO "emptyset" iA
\emptyset
endsnippet

context "math()"
snippet tt "text" i
\text{$1}$0
endsnippet

snippet no "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet \\{ "set" wA
\\{$1\\} $0
endsnippet

context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\bar{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet '\\?bar' "bar" irA
\bar{$1}$0
endsnippet

# context "math()"
# snippet '\\?ovl' "bar" irA
# \overline{$1}$0
# endsnippet

context "math()"
snippet '\\?hat' "hat" irA
\hat{$1}$0
endsnippet


## Structure

priority 0
snippet chap "Chapter" wb
\chapter{$1${VISUAL}}%
\label{cap:$2}
endsnippet

snippet sec "Section" wb
\section{$1${VISUAL}}%
\label{sec:$2}
endsnippet

snippet sec* "Section*" wb
\section*{$1${VISUAL}}
endsnippet

snippet sub "Subsection" wb
\subsection{$1${VISUAL}}%
\label{ssec:$2}
endsnippet

snippet sub* "Subsection*" wb
\subsection*{$1${VISUAL}}
endsnippet

snippet subsub "Subsection" wb
\subsubsection{$1${VISUAL}}%
\label{sssec:$2}
endsnippet

snippet subsub* "Subsubsection" wb
\subsubsection*{$1${VISUAL}}
endsnippet

snippet par "Paragraph" wb
\paragraph{$1${VISUAL}}%
\label{par:$2}
endsnippet

snippet par* "Paragraph*" wb
\paragraph*{$1${VISUAL}}
endsnippet

snippet subpar "Sub Paragraph" wb
\subparagraph{$1${VISUAL}}%
\label{spar:$2}
endsnippet

snippet subpar* "Sub Paragraph*" wb
\subparagraph*{$1${VISUAL}}
endsnippet

## Pairs

priority -2
snippet '(\\[a-z]+){' "" irA
`!p snip.rv = match.group(1)`{$1}$0
endsnippet

context "math()"
snippet ceil "Ceil" iA
\lceil $1 \rceil $0
endsnippet

context "math()"
snippet teto "Ceil2" iA
\lceil $1 \rceil $0
endsnippet

context "math()"
snippet floor "Floor" iA
\lfloor $1 \rfloor$0
endsnippet

context "math()"
snippet piso "Floor2" iA
\lfloor $1 \rfloor$0
endsnippet

context "math()"
snippet piso "Floor2" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet || "norm / modulo" iA
\|$1\|$0
endsnippet

context "math()"
snippet norm "norm / modulo" iA
\norm{$1}$0
endsnippet

context "math()"
snippet mat( "Matrix ( )" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet mat[ "Matrix [ ]" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
(${1:${VISUAL}}) $0
endsnippet

priority -1
context "math()"
snippet lr "left[(] right[)]" i
\left${1:(} ${3:${VISUAL}} \right${2:)} $0
endsnippet

context "math()"
snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet lrnorm "left|| right||" iA
\left\| ${1:${VISUAL}} \right\| $0
endsnippet

context "math()"
snippet lr{ "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet lr< "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet lrceil "Ceil lr" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet lrteto "Ceil lr2" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet lrfloor "Floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet lrpiso "Floor2" iA
\left\lfloor $1 \right\rfloor$0
endsnippet
